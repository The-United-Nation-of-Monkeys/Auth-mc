version: '3.7'

networks:
  auth:
    driver: bridge 

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    env_file:
      - .env-non-dev
    ports:
      - "22181:2181"
    networks:
      - auth

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "19092:9092"
      - "9997:9997"
    networks:
      - auth
    depends_on:
      - zookeeper
    env_file:
      - .env-non-dev

#  kafka:
#    image: confluentinc/cp-server:7.2.1
#    hostname: kafka
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#      - "9997:9997"
#    networks:
#      - auth
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_JMX_PORT: 9997
#      KAFKA_JMX_HOSTNAME: kafka
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "8081:8080"
#    environment:
##      DYNAMIC_CONFIG_ENABLED: true
#
#  sudo docker compose exec kafka kafka-topics --bootstrap-server localhost:19092 --list
#  WARN[0000] /home/k/Projects_Python/LKS-Auth-mc/docker-compose.yml: `version` is obsolete
#  _confluent-command
#  _confluent-telemetry-metrics
#  _confluent_balancer_api_state
#  _confluent_balancer_broker_samples
#  _confluent_balancer_partition_samples
#

  db:
    image: postgres
    container_name: db_auth
    ports:
      - "4545:5432"
    env_file:
      - .env-non-dev
    networks:
      - auth


  app:
    build:
      context: .
    env_file:
      - .env-non-dev
    container_name: mc_auth
    ports:
      - "8080:8000"
    networks:
      - auth
    depends_on:
      - db
      - kafka


